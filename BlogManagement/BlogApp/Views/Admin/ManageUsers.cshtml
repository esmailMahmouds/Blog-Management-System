@model IEnumerable<BlogApp.Models.DomainClasses.User>
@{
    ViewData["Title"] = "Manage Users";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-users"></i> Manage Users</h1>
        <a asp-action="Dashboard" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Total Users</h5>
                            <h3>@Model.Count()</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Authors</h5>
                            <h3>@Model.Count(u => u.Role == BlogApp.Enums.Role.Author)</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-pen fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Admins</h5>
                            <h3>@Model.Count(u => u.Role == BlogApp.Enums.Role.Admin)</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-user-shield fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Countries</h5>
                            <h3>@Model.Select(u => u.Country?.Name).Distinct().Count()</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-globe fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card shadow">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-list"></i> All Users
            </h5>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle"></i>
                    <h5>No users found</h5>
                    <p>There are no users in the system.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>User</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Country</th>
                                <th>Date of Birth</th>
                                <th>Rating</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(user.ImageURL))
                                            {
                                                <img src="@user.ImageURL" alt="@user.Name" class="rounded-circle me-2" 
                                                     style="width: 40px; height: 40px; object-fit: cover;">
                                            }
                                            else if (user.ProfileImage != null)
                                            {
                                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(user.ProfileImage)" 
                                                     alt="@user.Name" class="rounded-circle me-2" 
                                                     style="width: 40px; height: 40px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="rounded-circle bg-secondary d-flex align-items-center justify-content-center me-2" 
                                                     style="width: 40px; height: 40px;">
                                                    <i class="fas fa-user text-white"></i>
                                                </div>
                                            }
                                            <div>
                                                <div class="fw-bold">@user.Name</div>
                                                <small class="text-muted">ID: @user.Id</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span>@user.Email</span>
                                    </td>
                                    <td>
                                        @if (user.Role == BlogApp.Enums.Role.Admin)
                                        {
                                            <span class="badge bg-danger">
                                                <i class="fas fa-user-shield"></i> Admin
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-primary">
                                                <i class="fas fa-pen"></i> Author
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        @if (user.Country != null)
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-flag"></i> @user.Country.Name
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        <small class="text-muted">
                                            @user.DateOfBirth.ToString("MMM dd, yyyy")
                                        </small>
                                    </td>
                                    <td>
                                        @if (user.AverageRate.HasValue)
                                        {
                                            <span class="text-warning">
                                                <i class="fas fa-star"></i> @user.AverageRate.Value.ToString("0.0")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No rating</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-controller="Profile" asp-action="ViewProfile" asp-route-userId="@user.Id" 
                                               class="btn btn-outline-info" target="_blank" title="View Profile">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            
                                            @if (user.Role != BlogApp.Enums.Role.Admin)
                                            {
                                                <button type="button" class="btn btn-outline-danger" 
                                                        onclick="deleteUser(@user.Id)" title="Delete User">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-outline-secondary" disabled title="Cannot delete admin">
                                                    <i class="fas fa-shield-alt"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Toast for notifications -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050">
    <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Notification</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastMessage">
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showToast(message, isSuccess = true) {
            const toastElement = document.getElementById('notificationToast');
            const toastMessage = document.getElementById('toastMessage');
            const toastHeader = toastElement.querySelector('.toast-header');
            
            toastMessage.textContent = message;
            
            toastHeader.classList.remove('bg-success', 'bg-danger', 'text-white');
            if (isSuccess) {
                toastHeader.classList.add('bg-success', 'text-white');
            } else {
                toastHeader.classList.add('bg-danger', 'text-white');
            }
            
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }

        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user? This action cannot be undone and will remove all their posts, comments, likes, and ratings.')) {
                fetch('@Url.Action("DeleteUser", "Admin")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id: userId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast(data.message, true);
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        showToast(data.message, false);
                    }
                })
                .catch(error => {
                    showToast('An error occurred. Please try again.', false);
                });
            }
        }
    </script>
}

@Html.AntiForgeryToken()